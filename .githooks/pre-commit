#!/bin/bash

# Pre-commit hook for documentation validation
# This hook ensures documentation quality before allowing commits

echo "Running pre-commit documentation validation..."

# Get the project root directory
PROJECT_ROOT="$(git rev-parse --show-toplevel)"

# Check if any documentation files are being committed
CHANGED_DOC_FILES=$(git diff --cached --name-only | grep -E '\.(md|rst|txt)$' | grep -E '(docs/|README|CHANGELOG|API_SPECIFICATION)')

if [ -n "$CHANGED_DOC_FILES" ]; then
    echo "Documentation files changed. Running validation..."

    # Check if uv and Python are available
    if command -v uv &> /dev/null && command -v python3 &> /dev/null; then
        cd "$PROJECT_ROOT/src/codomyrmex/documentation"

        # Aggregate docs if needed
        echo "Aggregating documentation..."
        uv run python3 documentation_website.py aggregate_docs

        # Validate documentation
        echo "Validating documentation versions..."
        if ! uv run python3 documentation_website.py validate_docs; then
            echo "❌ Documentation validation failed!"
            echo "Please fix the issues above before committing."
            exit 1
        fi

        # Run comprehensive quality check
        echo "Running comprehensive documentation quality check..."
        if ! uv run python3 scripts/validate_docs_quality.py; then
            echo "❌ Documentation quality check failed!"
            echo "Please fix the issues above before committing."
            exit 1
        fi

        # Check for uncommitted aggregated docs changes
        if [ -n "$(git status --porcelain docs/modules/)" ]; then
            echo "❌ Aggregated documentation is out of sync!"
            echo "Please commit the updated aggregated docs or run:"
            echo "  cd src/codomyrmex/documentation && python3 documentation_website.py aggregate_docs"
            git status docs/modules/
            exit 1
        fi

        echo "✅ All documentation validation checks passed!"
    else
        echo "⚠️  uv or Python3 not found. Skipping documentation validation."
        echo "Please ensure Python3 is installed and run validation manually."
    fi
else
    echo "No documentation files changed. Skipping validation."
fi

echo "Pre-commit hook completed successfully."
exit 0

