# Logging Monitoring - Requirements

# This file lists module-specific packages and dependencies for the Logging Monitoring module.
# However, common project-wide dependencies, such as `python-dotenv` (used by this module
# for loading .env configuration), are expected to be listed in the main `requirements.txt`
# at the root of the Codomyrmex project.

# The `environment_setup/` module provides guidance on setting up the overall project environment,
# which includes installing dependencies from the root `requirements.txt`.

# This logging module primarily relies on Python's built-in `logging` module and `python-dotenv`.
# If this module were to introduce other specific third-party libraries purely for its own
# advanced functionalities (e.g., a specialized log shipping library not used elsewhere),
# they would be listed here.

# For now, no additional module-specific dependencies are required beyond what is provided
# by standard Python and the project-level `python-dotenv`.

# Example if a specific library was needed for this module only:
# # specialized-logging-handler==1.2.3

# PLEASE RENAME/ADAPT THIS FILE and its contents based on the primary language and package manager for this module.
# For example:
# - Python: `requirements.txt` (pip), `environment.yml` (conda), or `pyproject.toml` (poetry/pdm)
# - Node.js: `package.json`
# - Java: `pom.xml` (Maven), `build.gradle` (Gradle)
# - Go: `go.mod`
# - Rust: `Cargo.toml`
# - Ruby: `Gemfile`
# - etc.

# Example for a Python module (if this were `requirements.txt`):
# requests==2.25.1
# numpy>=1.20.0
# pandas # for latest version

# Example for a Node.js module (if this were `package.json`, content would be JSON):
# {
#   "name": "module-name",
#   "version": "0.1.0",
#   "dependencies": {
#     "library-a": "^1.2.3",
#     "library-b": "~4.5.6"
#   },
#   "devDependencies": {
#     "testing-framework": "^7.8.9"
#   }
# }

# Add your module-specific dependencies below, following the appropriate format for your chosen language/tooling.

# [Dependency Name]==[Version Specifier] # e.g., my-library==1.0.0
# [Another Dependency]>=[Minimum Version] # e.g., another-lib>=2.1

# This module's Python dependencies are currently met by the global `requirements.txt`
# in the project root.
#
# If this module later develops specific Python dependencies not included globally,
# they should be listed here. 