# Documentation - Requirements

# This file lists the Python packages and dependencies required for any Python-based helper scripts
# used in the Documentation module's build process (e.g., pre-processing scripts for Docusaurus).
# The `environment_setup/` module may use this file to provision the necessary Python environment for such scripts.

# Node.js dependencies for the Docusaurus site itself are managed in `documentation/package.json`.

# If this module uses Python helper scripts with specific dependencies, list them below, ensuring to pin exact versions.
# Example:
# beautifulsoup4==4.12.3  # For a script that pre-processes markdown
# requests==2.31.0        # For a script that fetches external data for docs

# Currently, no specific Python helper scripts with unique dependencies are part of this module.
# If such scripts are added, their dependencies should be listed here.

# General format:
# [Dependency Name]==[Version Specifier] # e.g., my-library==1.0.0

# PLEASE RENAME/ADAPT THIS FILE and its contents based on the primary language and package manager for this module.
# For example:
# - Python: `requirements.txt` (pip), `environment.yml` (conda), or `pyproject.toml` (poetry/pdm)
# - Node.js: `package.json`
# - Java: `pom.xml` (Maven), `build.gradle` (Gradle)
# - Go: `go.mod`
# - Rust: `Cargo.toml`
# - Ruby: `Gemfile`
# - etc.

# Example for a Python module (if this were `requirements.txt`):
# requests==2.25.1
# numpy>=1.20.0
# pandas # for latest version

# Example for a Node.js module (if this were `package.json`, content would be JSON):
# {
#   "name": "module-name",
#   "version": "0.1.0",
#   "dependencies": {
#     "library-a": "^1.2.3",
#     "library-b": "~4.5.6"
#   },
#   "devDependencies": {
#     "testing-framework": "^7.8.9"
#   }
# }

# Add your module-specific dependencies below, following the appropriate format for your chosen language/tooling.

# [Dependency Name]==[Version Specifier] # e.g., my-library==1.0.0
# [Another Dependency]>=[Minimum Version] # e.g., another-lib>=2.1

# This file can be used for Python dependencies if any Python scripts are part of the documentation build process (e.g., pre-processing scripts).
# If the documentation module relies solely on Node.js and Docusaurus, this file might not be needed or can be left empty. 