# Cursor Rules for the Root README.md

## 0. Preamble
These rules are specific to interacting with the main project `README.md` file located at the root of the Codomyrmex repository. They supplement `general.cursorrules`.

## 1. Purpose of the Root README.md
-   The root `README.md` is the primary entry point for anyone encountering the Codomyrmex project.
-   Its purpose is to provide a concise overview of the project, its goals, core modules, architecture, and how to get started or contribute.
-   It should be welcoming and informative.

## 2. Key Sections and Content
When editing, pay attention to maintaining the integrity and clarity of these key sections (or similar sections if the structure evolves):
-   **Project Title/Banner**
-   **Overview/Introduction**: What is Codomyrmex? What problems does it solve?
-   **Core Functional Modules Table**: This is a critical section.
    -   Ensure module names, descriptions, key tools/tech, and directory paths are accurate.
    -   Links to module directories should be correct.
-   **Core Project Structure & Conventions Table**: Similar to the modules table, ensure accuracy for shared directories like `template/`, `git_operations/`, etc.
-   **Project Governance & Contribution**: Links to `LICENSE`, `CONTRIBUTING.md`, `CODE_OF_CONDUCT.md` must be correct.
-   **Overall Vision/Framework**: The concluding summary.

## 3. Editing Guidelines
1.  **High-Level Focus**: Changes to the root `README.md` should reflect significant, project-wide information. Detailed information specific to a module belongs in that module's `README.md`.
2.  **Accuracy**: All information, especially links, module names, and directory paths, MUST be accurate and up-to-date.
3.  **Conciseness**: While informative, the root `README.md` should remain relatively concise. Direct users to module-specific documentation for deeper details.
4.  **Clarity**: Use clear and unambiguous language.
5.  **Formatting**:
    -   Maintain consistent Markdown formatting.
    -   Ensure tables are correctly formatted and render properly.
    -   Use relative links for files and directories within the repository (e.g., `[Build & Code Synthesis](./build_synthesis/)`).
6.  **Adding/Removing Modules**:
    -   If a new module is added to the project, it MUST be added to the "Core Functional Modules" table.
    -   If a module is removed or significantly restructured, the table MUST be updated.
    -   Ensure the link to the new module's directory is correct.
7.  **Links**: Verify all internal and external links.

## 4. Style and Tone
-   Maintain a professional and welcoming tone.
-   The README should be accessible to a broad audience, from potential users to experienced developers.

## 5. Final Check for Root README.md
-   Render the Markdown to preview changes before finalizing.
-   Double-check all links.
-   Ensure consistency with the overall project vision.
-   If adding a new module, confirm its directory exists and the link is valid. 