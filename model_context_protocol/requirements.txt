# Model Context Protocol - Requirements

# This file lists Python packages and dependencies required for the Model Context Protocol module.
# The `environment_setup/` module may use this file to provision the necessary environment.

# PLEASE RENAME/ADAPT THIS FILE and its contents based on the primary language and package manager for this module.
# For example:
# - Python: `requirements.txt` (pip), `environment.yml` (conda), or `pyproject.toml` (poetry/pdm)
# - Node.js: `package.json`
# - Java: `pom.xml` (Maven), `build.gradle` (Gradle)
# - Go: `go.mod`
# - Rust: `Cargo.toml`
# - Ruby: `Gemfile`
# - etc.

# Example for a Python module (if this were `requirements.txt`):
# requests==2.25.1
# numpy>=1.20.0
# pandas # for latest version

# Example for a Node.js module (if this were `package.json`, content would be JSON):
# {
#   "name": "module-name",
#   "version": "0.1.0",
#   "dependencies": {
#     "library-a": "^1.2.3",
#     "library-b": "~4.5.6"
#   },
#   "devDependencies": {
#     "testing-framework": "^7.8.9"
#   }
# }

# Add your module-specific dependencies below, following the appropriate format for your chosen language/tooling.

# If this module is Python-based and all its dependencies are already covered by the
# project's root requirements.txt, please note that here explicitly.
# e.g.:
# This module currently uses dependencies from the root requirements.txt file.
# If this module develops specific Python dependencies not included globally,
# (e.g., for schema validation like jsonschema), they should be listed here.

# [Dependency Name]==[Version Specifier] # e.g., my-library==1.0.0
# [Another Dependency]>=[Minimum Version] # e.g., another-lib>=2.1

# For schema definition and validation (e.g., if using JSON Schema for MCP messages)
jsonschema==4.23.0

# If this module develops other specific Python dependencies (e.g., for Protocol Buffers generation/handling
# if that format is chosen, or specific client/server libraries for an example implementation),
# they should be listed here with pinned versions.
# Example:
# # protobuf==3.20.3

# If all other dependencies are covered by the root requirements.txt, this can be stated.
# Currently, aside from potential schema tools like jsonschema, other dependencies are
# expected to be covered by the root requirements.txt or not applicable if the protocol
# itself is language-agnostic and implemented by other modules. 